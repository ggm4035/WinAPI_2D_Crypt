<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>maingame.cpp</FILENAME><LINE>15</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CMainGame::{ctor}</FUNCTION><DECORATED>??0CMainGame@@QAE@XZ</DECORATED><FUNCLINE>14</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>maingame.cpp</FILENAME><LINE>66</LINE><COLUMN>35</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CMainGame::Render</FUNCTION><DECORATED>?Render@CMainGame@@QAEXXZ</DECORATED><FUNCLINE>62</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>maingame.cpp</FILENAME><LINE>72</LINE><COLUMN>25</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CMainGame::Render</FUNCTION><DECORATED>?Render@CMainGame@@QAEXXZ</DECORATED><FUNCLINE>62</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>mainmenu.cpp</FILENAME><LINE>20</LINE><COLUMN>24</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CMainMenu::Initialize</FUNCTION><DECORATED>?Initialize@CMainMenu@@UAEXXZ</DECORATED><FUNCLINE>18</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>mainmenu.cpp</FILENAME><LINE>26</LINE><COLUMN>34</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CMainMenu::Update</FUNCTION><DECORATED>?Update@CMainMenu@@UAEXXZ</DECORATED><FUNCLINE>24</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>mainmenu.cpp</FILENAME><LINE>29</LINE><COLUMN>25</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CMainMenu::Update</FUNCTION><DECORATED>?Update@CMainMenu@@UAEXXZ</DECORATED><FUNCLINE>24</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>obj.cpp</FILENAME><LINE>15</LINE><COLUMN>54</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CObj::Move_Frame</FUNCTION><DECORATED>?Move_Frame@CObj@@IAEXXZ</DECORATED><FUNCLINE>13</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>obj.cpp</FILENAME><LINE>22</LINE><COLUMN>32</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CObj::Move_Frame</FUNCTION><DECORATED>?Move_Frame@CObj@@IAEXXZ</DECORATED><FUNCLINE>13</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>147</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>6340</DEFECTCODE><DESCRIPTION>서명 불일치: 'unsigned long'이(가) _Param_(3)로 전달되었습니다. 'swprintf_s'에 대한 호출 시에는 일부 signed 형식이 필요합니다.</DESCRIPTION><FUNCTION>CObjMgr::Save_Object</FUNCTION><DECORATED>?Save_Object@CObjMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>134</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>148</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>6054</DEFECTCODE><DESCRIPTION>'error' 문자열이 0으로 종료되지 않을 수 있습니다.</DESCRIPTION><FUNCTION>CObjMgr::Save_Object</FUNCTION><DECORATED>?Save_Object@CObjMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>134</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>3</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>136</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>144</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>146</LINE><COLUMN>8</COLUMN><KEYEVENT><ID>1</ID><KIND>선언</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>이 식은 'error'을(를) 0으로 종료할 수 없습니다.</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>147</LINE><COLUMN>12</COLUMN><KEYEVENT><ID>2</ID><KIND>선언</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'error'은(는) 'swprintf_s'(c:\program files (x86)\windows kits\10\include\10.0.10150.0\ucrt\corecrt_wstdio.h:1553에서 선언됨)의 출력입니다.</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>148</LINE><COLUMN>12</COLUMN><KEYEVENT><ID>3</ID><KIND>사용법</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'error'은(는) 'MessageBoxW'(c:\program files (x86)\windows kits\8.1\include\um\winuser.h:8697에서 선언됨)에 대한 입력입니다.</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>148</LINE><COLUMN>12</COLUMN><KEYEVENT><ID>4</ID><KIND>사용법</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'error'은(는) 'MessageBoxW'의 SAL 주석에 의해 0으로 종료되기 위해 필요합니다.</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>194</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CObjMgr::Load_Object</FUNCTION><DECORATED>?Load_Object@CObjMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>169</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>195</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CObjMgr::Load_Object</FUNCTION><DECORATED>?Load_Object@CObjMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>169</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>objmgr.cpp</FILENAME><LINE>196</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CObjMgr::Load_Object</FUNCTION><DECORATED>?Load_Object@CObjMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>169</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>player.cpp</FILENAME><LINE>24</LINE><COLUMN>31</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CPlayer::Initialize</FUNCTION><DECORATED>?Initialize@CPlayer@@UAEXXZ</DECORATED><FUNCLINE>19</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>player.cpp</FILENAME><LINE>61</LINE><COLUMN>32</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CPlayer::Late_Update</FUNCTION><DECORATED>?Late_Update@CPlayer@@UAEXXZ</DECORATED><FUNCLINE>51</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>player.cpp</FILENAME><LINE>66</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>CPlayer::Late_Update</FUNCTION><DECORATED>?Late_Update@CPlayer@@UAEXXZ</DECORATED><FUNCLINE>51</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>projectcrypt.cpp</FILENAME><LINE>55</LINE><COLUMN>28</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>wWinMain</FUNCTION><DECORATED>wWinMain@16</DECORATED><FUNCLINE>22</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>projectcrypt.cpp</FILENAME><LINE>73</LINE><COLUMN>33</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>wWinMain</FUNCTION><DECORATED>wWinMain@16</DECORATED><FUNCLINE>22</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>projectcrypt.cpp</FILENAME><LINE>79</LINE><COLUMN>25</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>'GetTickCount64'을(를) 'GetTickCount' 대신 사용하십시오. 이유: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>wWinMain</FUNCTION><DECORATED>wWinMain@16</DECORATED><FUNCLINE>22</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>tilemgr.cpp</FILENAME><LINE>169</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CTileMgr::Load_Tiles</FUNCTION><DECORATED>?Load_Tiles@CTileMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>140</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>tilemgr.cpp</FILENAME><LINE>171</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CTileMgr::Load_Tiles</FUNCTION><DECORATED>?Load_Tiles@CTileMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>140</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>tilemgr.cpp</FILENAME><LINE>172</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CTileMgr::Load_Tiles</FUNCTION><DECORATED>?Load_Tiles@CTileMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>140</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>tilemgr.cpp</FILENAME><LINE>174</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CTileMgr::Load_Tiles</FUNCTION><DECORATED>?Load_Tiles@CTileMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>140</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>tilemgr.cpp</FILENAME><LINE>175</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>반환 값이 무시되었습니다. 'ReadFile'.</DESCRIPTION><FUNCTION>CTileMgr::Load_Tiles</FUNCTION><DECORATED>?Load_Tiles@CTileMgr@@QAEXPB_W@Z</DECORATED><FUNCLINE>140</FUNCLINE><PATH /></DEFECT><DEFECT><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>uimgr.cpp</FILENAME><LINE>59</LINE><COLUMN>28</COLUMN></SFA><DEFECTCODE>6246</DEFECTCODE><DESCRIPTION>'iter'의 지역 선언이 외부 범위에 있는 같은 이름의 선언을 숨깁니다. 자세한 내용은 줄 '55'('c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\uimgr.cpp')에 있는 이전 선언을 참조하십시오.</DESCRIPTION><FUNCTION>CUIMgr::Render</FUNCTION><DECORATED>?Render@CUIMgr@@QAEXPAUHDC__@@@Z</DECORATED><FUNCLINE>53</FUNCLINE><PATH><SFA><FILEPATH>c:\users\joo\documents\visual studio 2015\projects\projectcrypt\projectcrypt\</FILEPATH><FILENAME>uimgr.cpp</FILENAME><LINE>55</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT></DEFECTS>